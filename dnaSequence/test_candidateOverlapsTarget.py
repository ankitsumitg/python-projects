"""
Do Not Edit this file. You may and are encouraged to look at it for reference.
"""

import unittest
import dnaSequencing

class TestCandidateOverlapsTarget(unittest.TestCase):
    def test001_candidateOverlapsTargetExists(self):
        self.assertTrue('candidateOverlapsTarget' in dir(dnaSequencing),
                        'Function "candidateOverlapsTarget" was not defined, check your spelling')

    def test002_candidateOverlapsTarget(self):
        from dnaSequencing import candidateOverlapsTarget
        target = 'ABBBBBA'
        candidate = 'BABBBAA'
        overlaps = [False, True, False, False, False, False, False]
        for i in range(len(overlaps)):
            expected = overlaps[i]
            overlap = i + 1
            actual = candidateOverlapsTarget(target, candidate, overlap)
            if expected:
                message = 'The last %s characters of the target strand DO NOT overlap the first %s characters of the candidate strand' % (overlap, overlap)
            else:
                message = 'The last %s characters of the target strand and the first %s characters of the candidate strand DO overlap' % (overlap, overlap)
            self.assertEqual(expected, actual, message)

    def test003_candidateOverlapsTarget(self):
        from dnaSequencing import candidateOverlapsTarget
        target = 'ABABABAB'
        candidate = 'BABABABA'
        overlaps = [True, False, True, False, True, False, True, False]
        for i in range(len(overlaps)):
            expected = overlaps[i]
            overlap = i + 1
            actual = candidateOverlapsTarget(target, candidate, overlap)
            if expected:
                message = 'The last %s characters of the target strand DO NOT overlap the first %s characters of the candidate strand' % (overlap, overlap)
            else:
                message = 'The last %s characters of the target strand and the first %s characters of the candidate strand DO overlap' % (overlap, overlap)
            self.assertEqual(expected, actual, message)

if __name__ == '__main__':
    unittest.main()
