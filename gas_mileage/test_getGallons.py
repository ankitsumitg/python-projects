"""
Do Not Edit this file. You may and are encouraged to look at it for reference.
"""

import unittest
import gas_mileage


class TestGetGallons(unittest.TestCase):
    def input_replacement(self, prompt):
        self.assertFalse(self.too_many_inputs)
        self.input_given_prompt = prompt
        r = self.input_response_list[self.input_response_index]
        self.input_response_index += 1
        if self.input_response_index >= len(self.input_response_list):
            self.input_response_index = 0
            self.too_many_inputs = True
        return r

    def print_replacement(self, *args, **kargs):
        return

    def setUp(self):
        self.too_many_inputs = False
        self.input_given_prompt = None
        self.input_response_index = 0
        self.input_response_list = [""]
        gas_mileage.input = self.input_replacement
        gas_mileage.print = self.print_replacement

        return

    def test001_getGallonsExists(self):
        self.assertTrue('getGallons' in dir(gas_mileage),
                        'Function "getGallons" is not defined, check your spelling')
        return

    def test002_ggetGallonsSendsCorrectPrompt(self):
        from gas_mileage import getGallons
        expected_prompt = "gallons"
        expected_response = "1.7"
        self.input_response_list = [expected_response]
        actual_response = getGallons()
        self.assertTrue(expected_prompt.lower() in self.input_given_prompt.lower())
        return

    def test003_getGallonsGetsInput(self):
        from gas_mileage import getGallons
        expected_response = "10"
        self.input_response_list = [expected_response]
        actual_response = getGallons()
        self.assertTrue(type(actual_response) is float)
        self.assertEqual(actual_response, 10.0)
        return

    def test004_getGallonsStripsWhitespace(self):
        from gas_mileage import getGallons
        expected_response = "1.7"
        self.input_response_list = [" \t\n" + expected_response + " \t\n"]
        actual_response = getGallons()
        self.assertEqual(actual_response, 1.7)
        return

    def test005_getGallonsIgnoresBadInput(self):
        from gas_mileage import getGallons
        expected_response = "10"
        self.input_response_list = ["", "0.0", "-1.7", "\n", " \t\n" + expected_response + " \t\n"]
        actual_response = getGallons()
        self.assertEqual(actual_response, 10.0)
        return


if __name__ == '__main__':
    unittest.main()
